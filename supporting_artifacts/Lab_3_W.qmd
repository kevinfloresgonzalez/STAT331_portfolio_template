---
title: "Lab 3"
author: "Kevin Flores Gonzalez"
format:
  html: 
    code-fold: true
    code-summary: "Show the code"
    theme: lux
    toc: true
    self-contained: true
    code-tools: true
editor: visual
execute:
  echo: true
  error: true
  messages: false
---

# Lab 3: Hip-Hop Lyrics

## The Dataset

The HipHop dataset contains results from a study conducted by a linguist at the University of Minnesota. The researcher, interested in predicting musical taste based on familiarity with African American English (AAE), gathered results from 168 subjects and asked each to define 64 different AAE terms. The score quantifies how well the subject knew the term on a scale of 1-5 (1 = not at all, 5 = very well).

An explanation of the data can be found here:

<http://conservancy.umn.edu/bitstream/handle/11299/116327/5/explanationAAEHiphopChesley.txt>

### A Brief Overview of the Dataset

\- The study is looking to see if musical tastes, specifically a preference for hip-hop music, is a better predictor of AAE vocabulary knowledge than ethnicity, social network phenomena, and general pop-culture knowledge.

-   The primary variables of interest for this study is "familiarity". Paricipants were ranked on "familiarity" on a scale of 1 = not at all, to 5 = well.

<!-- -->

    -- familiarity: a participant's familiarity with an individual vocabulary item. How well the participant knows the definition; 1 = not at all, 5 = well. 

\- The rows in this dataset signify a definition of each participant.

\- Missing values in this dataset were replaced with mean values. If you replace missing values with the mean you run the risk of your data misrepresenting the overall mean and possibly getting a worse model for the data than just leaving out the original data could have provided.

```{r}
library(tidyverse)
hiphop <- read_csv(here::here
                    ("Week 3", "Lab 3", "hiphop.csv"))
```

## Cleaning the Dataset

In the following code chunk I decided to change strings in factors, filter out rows where county and city where equal to 0, and lastly filtered out rows where rows numPreferred Artists and numOverallArtists equaled NA.

```{r}
hiphop_clean <- hiphop |>
  mutate(across(where(is.character), factor)) |> 
  filter(city != 0, county != 0, 
         !is.na(numPreferredArtists), 
         !is.na(numOverallArtists)
         )
```

## Number of Unique AAE Words Studied

The dataset contains 64 unique AAE words that studied.

```{r}
distinct(hiphop_clean, word) |>
count()
```

## Re-categorizing the Ethnic Variable

In order to simplify the data I re-categorized the row ethnic into only two groups, "white" and "non-white"

```{r}
hiphop_clean <- hiphop_clean |> 
  mutate(ethnic_category = ifelse(ethnic == "white",
                                  "white",
                                  "non-white")) |>
  relocate(ethnic_category, .after = ethnic)
```

## Why collapsing ethnic data can be bad

To collapse ethnic or racial categories in i believe most cases, is a bad way to manipulate data. By doing so you run the risk of generalizing the over all "non-white" population. This can be damaging as stereotypes can arise. This same train of thought can apply to a lot of studies that minimize the presence, view, and studies done to "non-white" participants.

## Analyzing the Demographics of the Data

While investigating the demographics of the people in this study you learn that most of the participants are female, white, and have an average age of 20.2 years old.

```{r}
hiphop |>
  distinct(subj, .keep_all = TRUE) |>
  count(sex)
```

With 117 Females, and 51 Males, we can tell that 69.64 percent of the participants are Female.

```{r}
age_demographic <- hiphop |>
  distinct(subj, .keep_all = TRUE) |>
  summarise(mean_age = mean(age))
age_demographic
```

The output lets us know the average age of participants is 20.02

```{r}
ethnic_demographic <- hiphop |>
  distinct(subj, .keep_all = TRUE) |> 
  group_by(ethnic) |>
  count(ethnic)
ethnic_demographic
```

From this output we learn that 80.35 percent of the participants are white.

## Plots to Display the Demographic Information

### Plot One

```{r}
demographics_plot <- hiphop |>
  distinct(subj, .keep_all = TRUE)

ggplot(demographics_plot, aes(x = age, y = ethnic, color = sex)) +
  geom_boxplot() +
  labs(x = "Age of Participant",
       y = "Ethnicity of Particpant",
       color = "sex")
```

### Plot Two

```{r}
ggplot(demographics_plot, aes(x = ethnic)) +
  geom_bar() +
  labs(x = "Ethinic Background",
       y = "Count of the # of People")
```

### Plot Three

```{r}
ggplot(demographics_plot, aes(x = age)) +
  geom_density() +
  labs(y = "Density Estimate of Age",
       x = "Ages")
```

## Familiar Pharses: Demographic Questions

For each group identified below, the following code will figure out the most and least popular familiar pharses on average.

### People Under the Age of 20

```{r}
under_twenty_hiphop_max <- hiphop_clean |>
  filter(age < 20) |>
  select(word, familiarity) |>
  group_by(word) |>
  summarise(mean = mean(familiarity), n = n()) |>
  slice_max(mean)

under_twenty_hiphop_min <- hiphop_clean |>
  filter(age < 20) |>
  select(word, familiarity) |>
  group_by(word) |>
  summarise(mean = mean(familiarity), n = n()) |>
  slice_min(mean)

under_twenty_hiphop_max
under_twenty_hiphop_min
```

Most familiar phrase for under 20 year old's is "feel me"

Least familiar phrase for under 20 year old's is "The Nation"

### Non-White Women

```{r}
n_white_women_hiphop_max <- hiphop_clean |>
  filter(ethnic != "white", sex == "Female") |>
  select(word, familiarity) |>
  group_by(word) |>
  summarise(mean = mean(familiarity), n = n()) |>
  slice_max(mean)

n_white_women_hiphop_min <- hiphop_clean |>
  filter(ethnic != "white", sex == "Female") |>
  select(word, familiarity) |>
  group_by(word) |>
  summarise(mean = mean(familiarity), n = n()) |>
  slice_min(mean)

n_white_women_hiphop_max
n_white_women_hiphop_min
```

Most familiar phrase for non-white women is "what it do"

Least familiar phrase for non-white women includes "break someone", "dollar cab", "domino", "dukey rope", "humming", "plex", "rollie", and "The Nation".

### White Men Above the Age of 30

```{r}
w_m_above_thirty_hiphop_max <- hiphop_clean |>
  filter(ethnic == "white", sex == "Male", age > 30) |>
  select(word, familiarity) |>
  group_by(word) |>
  summarise(mean = mean(familiarity), n = n()) |>
  slice_max(mean)

w_m_above_thirty_hiphop_min <- hiphop_clean |>
  filter(ethnic == "white", sex == "Male", age > 30) |>
  select(word, familiarity) |>
  group_by(word) |>
  summarise(mean = mean(familiarity), n = n()) |>
  slice_min(mean)

w_m_above_thirty_hiphop_max
w_m_above_thirty_hiphop_min
```

Most familiar phrases for white men above the age of 30 includes "5-0", "hard", and "make it rain".

Least familiar phrases for white men above the age of 30 includes the 59 phrases included in the output of the second function.

### Finding a Specific Individual's Data

```{r}
justin_bieber <- hiphop |>
  distinct(subj, .keep_all = TRUE) |>
  filter(sex == "Male", 
         age >= 17,
         age <= 23, 
         ethnic == "white", 
         city >= 10000, 
         city <= 60000) |>
  slice_max(bieber)
justin_bieber$subj
```

Tasked to find Justin Bieber in the dataset, the code above helped us narrow it down to p17. Subject p17 is Justin Bieber, he is 18, white, male, with a city code of 56377, fulfilling all the required specifications for him. He also has a high Bieber score.\
