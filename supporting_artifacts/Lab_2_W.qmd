---
title: "Lab 2"
author: "Kevin Flores Gonzalez"
format:
  html: 
    code-fold: true
    code-summary: "Show the code"
    theme: lux
editor: visual
execute:
  echo: true
  error: true
toc: true
self-contained: true
code-tools: true
messages: false
---

# Lab 2

## Reading in the Libraries & Data

The Portal Project is a long-term ecological study being conducted near Portal, AZ. Since 1977, the site has been used to study the interactions among rodents, ants and plants and their respective responses to climate. To study the interactions among organisms, we experimentally manipulate access to 24 study plots. This study has produced over 100 scientific papers and is one of the longest running ecological studies in the U.S.

We will be investigating the animal species diversity and weights found within plots at the Portal study site. The dataset is stored as a comma separated value (CSV) file. Each row holds information for a single animal, and the columns represent:

| Column          | Description                        |
|-----------------|------------------------------------|
| record_id       | Unique id for the observation      |
| month           | month of observation               |
| day             | day of observation                 |
| year            | year of observation                |
| plot_id         | ID of a particular plot            |
| species_id      | 2-letter code                      |
| sex             | sex of animal ("M", "F")           |
| hindfoot_length | length of the hindfoot in mm       |
| weight          | weight of the animal in grams      |
| genus           | genus of animal                    |
| species         | species of animal                  |
| taxon           | e.g. Rodent, Reptile, Bird, Rabbit |
| plot_type       | type of plot                       |

```{r}
#| message: FALSE
library(tidyverse)
library(here)
surveys <- read_csv(here::here
                    ("Week 2", "Lab 2", "surveys.csv"))
```

## Inspecting the Data

The following function quickly shows the the dimensions of the data.There are 30463 thousand observations and 15 variables.

```{r}
dim(surveys)
```

The following code shows the data types of the variables in the dataset.

```{r}
str(surveys)
```

## Scatterplot

Creating a scatterplot of the relationships between weight(on the x-axis) and hind foot_length (on the y-axis).

```{r}
ggplot(data = surveys, mapping = aes(x = weight, 
                                     y = hindfoot_length))+
  geom_point()
```

## Adding In Transparency

This makes the points more transparent and (most likely) easier to see.

```{r}
ggplot(data = surveys, mapping = aes(x = weight, 
                                     y = hindfoot_length)) +
  geom_point(alpha = .3)
```

## Adding in Jitter

Adding in Jitter is a useful way of handling over plotting caused by discreteness in smaller data sets by adding in a small amount of random variation.

```{r}
ggplot(data = surveys, mapping = aes(x = weight,
                                     y = hindfoot_length)) + 
  geom_jitter(alpha = 0.2)
```

## Faceting

A lot of overplotting occured during the creation of the scatterplot. Next, we will try to split the dataset into smaller subsets and see if that allows for better clarity.

```{r}
ggplot(data = surveys, mapping = aes(x = weight, y = hindfoot_length)) + 
  geom_point(alpha = .3) + 
  geom_jitter() +
  facet_wrap(~species)
```

## Boxplots & Density Ridges

Createing side-by-side boxplots to visualize the distribution of weight within each species. A fundamental complaint of boxplots is that they do not plot the raw data. However, with **ggplot** we can add the raw points on top of the boxplots!

```{r}
ggplot(data = surveys, mapping = aes(x = weight, y = species)) + 
  geom_boxplot(alpha = .3)
```

## Adding a layer to plot each observation

```{r}
ggplot(data = surveys, mapping = aes(x = weight,
                                     y = species)) + 
  geom_boxplot() + 
  geom_jitter()
```

## Removing the previous layer, adding in geom_jitter

```{r}
ggplot(data = surveys, mapping = aes(x = weight,
                                     y = species)) + 
  geom_boxplot() + 
  geom_jitter(color = "red")
```

## Removing the Outliers

**11. Inspect the help file for `geom_boxplot()` and see how you can remove the outliers from being plotted by `geom_boxplot()`. Make this change in the code above!**

```{r}
ggplot(data = surveys, mapping = aes(x = weight, y = species)) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_jitter(color = "red")
```

## Modifying the x and y axis

Some small changes that make **big** differences to plots. One of these changes are better labels for a plot's axes and legend.

```{r}
# Code for question 10! 
ggplot(data = surveys, mapping = aes(x = weight, y = species)) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_jitter(color = "red",
              alpha = .02) +
  labs(title = "Distribution of Weight by Rodents",
       x = "Weight in Grams",
       y = "Rodents") + 
  theme(plot.title = element_text(hjust = .5))

```

## Changing the Orientation

```{r}
# Code for question 11! 
ggplot(data = surveys, mapping = aes(y = weight, x = species)) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_jitter(color = "red",
              alpha = .02) +
  labs(title = "Distribution of Weight by Rodents",
       x = "Weight in Grams",
       y = "Rodents") + 
  theme(plot.title = element_text(hjust = .5))
```
